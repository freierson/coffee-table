---
title: "Coffee Consumption EDA "
format: html
---

```{r}
library(tidyverse)
coffee <- readr::read_csv(file = 'coffee_survey.csv', show_col_types = F) |>
  arrange(submission_id) |>
  rowid_to_column('submission_number')
```

```{r}
patterns_classifier <- list(
  Fruity = "(?i)fruit", 
  Honey = "(?i)honey", 
  Apple = "(?i)apple",
  Chocolate = "(?i)chocolat",
  Citrus = "(?i)citrus",
  Sour = "(?i)sour",
  Nutty = "(?i)nut",
  Smooth = "(?i)smooth",
  Bright = "(?i)bright",
  Smoky = '(?i)(smoky|smoke)',
  Balanced = '(?i)balanced',
  Caramel = '(?i)caramel',
  Earthy = '(?i)earth',
  Sweet = '(?i)sweet',
  Cherry = '(?i)(cherry|cherries)',
  Berry = '(?i)(berry|berries)',
  Floral = '(?i)(floral|flower)',
  Fermented = '(?i)ferment',
  Complex = '(?i)(complex|complicated)',
  Juicy = '(?i)juic(e|y)',
  Bitter = '(?i)bitter'
)
```

```{r}
for(note in names(patterns_classifier)) {
  coffee[paste0('note_a_', note)] <- str_detect(coffee$coffee_a_notes, pattern = patterns_classifier[[note]])
  coffee[paste0('note_b_', note)] <- str_detect(coffee$coffee_b_notes, pattern = patterns_classifier[[note]])
  coffee[paste0('note_c_', note)] <- str_detect(coffee$coffee_c_notes, pattern = patterns_classifier[[note]])
  coffee[paste0('note_d_', note)] <- str_detect(coffee$coffee_d_notes, pattern = patterns_classifier[[note]])
}
```

```{r}
notes <- coffee |>
  drop_na(dplyr::starts_with('note')) |>
  pivot_longer(dplyr::starts_with('note'), names_to = 'note', values_to = 'was_mentioned') |>
  mutate(coffee = substr(note,6,6),
         note = substr(note, 8, 1000)) |>
  relocate(coffee, note) |>
  filter(was_mentioned)
```

```{r}
prop_table <- notes |>
  count(note, coffee) |>
  group_by(note) |>
  mutate(prop = n / sum(n),
         N = sum(n)) |>
  ungroup() |>
  select(-n) |>
  pivot_wider(values_from = prop, names_from = coffee)
```

```{r}
sample_size <- coffee |> drop_na(dplyr::starts_with('note')) |> nrow()
most_often <- expand_grid(
  note = notes |>
    distinct(note) |>
    pull(note),
  l = letters[1:4],
  r = letters[1:4]
) |>
  filter(l != r) |>
  left_join(notes |>
  count(note, coffee), 
    by = join_by(note,l==coffee)) |>
  left_join(notes |>
  count(note, coffee), 
    by = join_by(note,r==coffee)) |>
  group_by(note) |>
  slice_max(n.x) |>
  slice_max(n.y) |>
  mutate(stats::prop.test(c(n.x,n.y),c(sample_size,sample_size)) |> broom::tidy()) |>
  mutate(most_often = ifelse(p.value <= 0.05, l, paste0(l,', ',r))) |>
  mutate(p.value=round(p.value,4)) |>
  select(note, p.value, most_often) |>
  ungroup()
```

```{r}
document_freq <- notes |>
  count(note, coffee, name = 'doc_freq')
mentioned_with <- inner_join(notes |>
             select(submission_number, coffee, note),
           notes |>
             select(submission_number, coffee, note),
           by=join_by(submission_number, coffee), relationship = "many-to-many") |>
  filter(note.x != note.y) |>
  arrange(submission_number, coffee) |>
  count(note.x, note.y, coffee) |>
  left_join(document_freq, by = join_by(note.y==note, coffee)) |>
  group_by(note.x,note.y) |>
  summarise(tfidf = mean(n / doc_freq), .groups='drop') |>
  group_by(note.x) |>
  slice_max(tfidf) |>
  rename(note = note.x, mentioned_with = note.y) |>
  select(note, mentioned_with, tfidf) |>
  ungroup()
```

```{r}
overall_means <- coffee |>
  select(submission_number, contains('bitterness'), contains('acidity'), contains('preference')) |>
  pivot_longer(-1) |>
  mutate(coffee = substr(name,8,8),
         variable = substr(name, 10, 1000)) |>
  select(-name) |>
  group_by(coffee,variable) |>
  summarise(mean = mean(value, na.rm=T), .groups='drop') |>
  pivot_wider(names_from = variable, values_from = mean) |>
  rename(sentiment = personal_preference)

note_associations <- notes |>
  mutate(
    bitterness = case_when(
      coffee == 'a' ~ coffee_a_bitterness,
      coffee == 'b' ~ coffee_b_bitterness,
      coffee == 'c' ~ coffee_c_bitterness,
      coffee == 'd' ~ coffee_d_bitterness
    ),
    acidity = case_when(
      coffee == 'a' ~ coffee_a_acidity,
      coffee == 'b' ~ coffee_b_acidity,
      coffee == 'c' ~ coffee_c_acidity,
      coffee == 'd' ~ coffee_d_acidity
    ),
    sentiment = case_when(
      coffee == 'a' ~ coffee_a_personal_preference,
      coffee == 'b' ~ coffee_b_personal_preference,
      coffee == 'c' ~ coffee_c_personal_preference,
      coffee == 'd' ~ coffee_d_personal_preference
    )
  ) |>
  select(submission_number, coffee, note, bitterness, acidity, sentiment) |>
  inner_join(overall_means, by=join_by(coffee), suffix = c('', '_mean')) |>
  group_by(note) |>
  summarise(
    bitterness_n = sum(!is.na(bitterness)),
    acidity_n = sum(!is.na(acidity)),
    score_n = sum(!is.na(sentiment)),
    bitterness = mean(bitterness-bitterness_mean, na.rm = T),
    acidity = mean(acidity-acidity_mean, na.rm = T),
    sentiment = mean(sentiment-sentiment_mean, na.rm = T),
    .groups='drop'
  )
```

```{r}
table_data <- prop_table |>
  left_join(most_often, by = join_by(note)) |>
  left_join(mentioned_with, by = join_by(note)) |>
  left_join(note_associations, by = join_by(note)) |>
  select(-ends_with('_n')) |>
  mutate(
    most_often1 = case_when(
      substr(most_often,1,1)=='a' ~ 'Kenyan coffee with a light roast',
      substr(most_often,1,1)=='b' ~ 'blend with a medium roast',
      substr(most_often,1,1)=='c' ~ 'blend with a dark roast',
      substr(most_often,1,1)=='d' ~ 'Colombian coffee',
    ),
    most_often2 = case_when(
      substr(most_often,4,4)=='a' ~ ' or the Kenyan coffee with a light roast',
      substr(most_often,4,4)=='b' ~ ' or the blend with a medium roast',
      substr(most_often,4,4)=='c' ~ ' or the blend with a dark roast',
      substr(most_often,4,4)=='d' ~ ' or the Colombian coffee',
      T ~ ''
    ),
    description = glue::glue('
    {note} was used as a flavour note {prettyNum(N,big.mark=",",scientific=FALSE)} times. This note was used when the coffee was experienced as {ifelse(bitterness<0,"less","more")} bitter, {ifelse(acidity<0,"less","more")} acidic, and {ifelse(sentiment<0,"less","more")} enjoyable. The flavour note was commonly mentioned along with "{mentioned_with}". Among the coffees in the kit the note was most commonly used to describe the {most_often1}{most_often2}.')
  )
table_data |>
  write_csv("table_data.csv")
```

```{r}
#| include: true
#| eval: true
dict <- as.list(table_data$description)
names(dict) <- table_data$note
jsonlite::toJSON(dict, pretty = T)
```


















